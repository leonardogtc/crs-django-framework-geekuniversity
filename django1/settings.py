"""
Django settings for django1 project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-%rn0jfyt4js_^!8!tpl$vk&dq28tv1z(8f50-&lxw^rph7e=6#"

# SECURITY WARNING: don't run with debug turned on in production!

# NOTA DO PROGRAMADOR:
# Se o valor for True:
# - O Django mostrará mensagens de erro detalhadas e foco no desenvolvimento.
# - O static será servido automaticamente.
#
# Se o valor for False:
# - O Django não mostrará mensagens de erro detalhadas e foco na produção.
# - O static não será servido automaticamente.
DEBUG = False

ALLOWED_HOSTS = [
    "projetodjangobasico.local", "127.0.0.1"
]  # Permite todos os hosts "*". Para produção, deve ser alterado para o domínio do site.


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",  # Aplicação de administração do Django
    "django.contrib.auth",  # Aplicação de autenticação do Django
    "django.contrib.contenttypes",  # Aplicação de conteúdo do Django
    "django.contrib.sessions",  # Aplicação de sessões do Django
    "django.contrib.messages",  # Aplicação de mensagens do Django
    "django.contrib.staticfiles",  # Aplicação de arquivos estáticos do Django
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "django1.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "django1.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "America/Sao_Paulo"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

"""
STATIC_URL = "static/"
Esse diretório é onde o Django irá procurar os arquivos estáticos quando o DEBUG estiver como True.
"""
STATIC_URL = "static/"

"""
Esse diretório é onde o Django irá procurar os arquivos estáticos quando o DEBUG estiver como False.
O comando collectstatic irá coletar todos os arquivos estáticos de todas as aplicações e colocá-los nesse diretório.
O comando collectstatic deve ser executado antes de colocar o site em produção.

O comando é:
python manage.py collectstatic
"""
STATIC_ROOT = os.path.join(BASE_DIR / "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGOUT_REDIRECT_URL = "/"
